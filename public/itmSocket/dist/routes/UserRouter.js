"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _express = _interopRequireDefault(require("express"));

var _mongodb = require("mongodb");

var _expressValidator = require("express-validator");

var _UserController = _interopRequireDefault(require("../Controller/UserController"));

var _JwtVerify = _interopRequireDefault(require("../Middlewares/JwtVerify"));

var _VerifyAdminScope = _interopRequireDefault(require("../Middlewares/VerifyAdminScope"));

var _FileUploader = _interopRequireDefault(require("../Middlewares/FileUploader"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var router = _express.default.Router();

router.get('', _JwtVerify.default, _UserController.default.index);
router.get('/kycrequest', _JwtVerify.default, _UserController.default.kycrequest);
router.post('/change-password', _JwtVerify.default, _UserController.default.changePassword);
router.get('/my-visitors', _JwtVerify.default, _UserController.default.myVisitors);
router.get('/matches', _JwtVerify.default, _UserController.default.myBestMatches);
router.get('/invites', _JwtVerify.default, _UserController.default.myInviteHistory);
router.get('/invites-earn', _JwtVerify.default, _UserController.default.invitesEarn);
router.get('/top-fans/:id', _JwtVerify.default, _UserController.default.myTopFans);
router.get('/recent-fans/:id', _JwtVerify.default, _UserController.default.recentFans);
router.get('/:id', _JwtVerify.default, (0, _expressValidator.param)('id').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.single);
router.put('', _JwtVerify.default, _FileUploader.default.fields([{
  name: 'profilePic',
  maxCount: 1
}, {
  name: 'kycImage',
  maxCount: 1
}]), _UserController.default.update);
router.put('/:id', _JwtVerify.default, _VerifyAdminScope.default, _FileUploader.default.single('profilePic'), _UserController.default.updateUserByAdmin);
router.delete('/:id', _JwtVerify.default, (0, _expressValidator.param)('id').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.remove);
router.get('/match/:userId', _JwtVerify.default, (0, _expressValidator.param)('userId').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.matchProfile);
router.get('/follow/:userId', _JwtVerify.default, (0, _expressValidator.param)('userId').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.followUnfollowUser);
router.get('/like/:userId', _JwtVerify.default, (0, _expressValidator.param)('userId').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.likeDislikeUser);
router.get('/review/:userId', _JwtVerify.default, (0, _expressValidator.param)('userId').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.reviewProfile);
router.post('/subscribe', _JwtVerify.default, _UserController.default.subscribe);
router.post('/recent/:id', _JwtVerify.default, (0, _expressValidator.param)('id').customSanitizer(value => {
  try {
    return (0, _mongodb.ObjectId)(value);
  } catch (err) {
    return err;
  }
}), _UserController.default.recentSingle);
router.post('/recent', _JwtVerify.default, _UserController.default.recentDeleteAll);
router.post('/admin/plan', _JwtVerify.default, _VerifyAdminScope.default, _UserController.default.subscribeByAdmin);
router.put('/block/:id', _JwtVerify.default, _VerifyAdminScope.default, _UserController.default.blockUnblockUser);
router.post('/give-away', _JwtVerify.default, _UserController.default.giveAwayToUser);
router.get('/give-away/list', _JwtVerify.default, _VerifyAdminScope.default, _UserController.default.giveAwayList);
router.put('/verify/:id', _JwtVerify.default, _VerifyAdminScope.default, _UserController.default.verifyUser);
router.put('/reject/:id', _JwtVerify.default, _VerifyAdminScope.default, _UserController.default.rejectUser);
router.get('/acceptLike/:id/:status', _JwtVerify.default, _UserController.default.acceptLike);
router.post('/kycupdate', _JwtVerify.default, _FileUploader.default.single('kycImage'), _UserController.default.kycImageUpload);
router.post('/deleteRequest', _JwtVerify.default, _UserController.default.deleteRequest);
router.post('/updateDeleteRequest', _JwtVerify.default, _UserController.default.updateDeleteRequest);
router.get('/adminGift/:id', _JwtVerify.default, _UserController.default.adminGift);
router.post('/useGiftPlan', _JwtVerify.default, _UserController.default.useGiftPlan);
var _default = router;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,