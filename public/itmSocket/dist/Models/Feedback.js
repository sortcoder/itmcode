"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var feedbackSchema = new _mongoose.Schema({
  reportedby: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  title: String,
  type: String,
  adminRemark: String,
  description: String,
  status: {
    type: String,
    enum: ['pending', 'inProgress', 'resolved'],
    default: 'pending'
  },
  isDeleted: {
    type: Boolean,
    default: false
  }
}, {
  timestamps: true
});
feedbackSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var Feedback = (0, _mongoose.model)('Feedback', feedbackSchema);
var _default = Feedback;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvRmVlZGJhY2suanMiXSwibmFtZXMiOlsiZmVlZGJhY2tTY2hlbWEiLCJTY2hlbWEiLCJyZXBvcnRlZGJ5IiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJ0aXRsZSIsIlN0cmluZyIsImFkbWluUmVtYXJrIiwiZGVzY3JpcHRpb24iLCJzdGF0dXMiLCJlbnVtIiwiZGVmYXVsdCIsImlzRGVsZXRlZCIsIkJvb2xlYW4iLCJ0aW1lc3RhbXBzIiwic2V0IiwidHJhbnNmb3JtIiwiZG9jIiwicmV0Iiwib3B0IiwiX192IiwiRmVlZGJhY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxjQUFjLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUM5QkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEWDtBQUVSQyxJQUFBQSxHQUFHLEVBQUU7QUFGRyxHQURrQjtBQUs5QkMsRUFBQUEsS0FBSyxFQUFFQyxNQUx1QjtBQU05QkwsRUFBQUEsSUFBSSxFQUFFSyxNQU53QjtBQU85QkMsRUFBQUEsV0FBVyxFQUFFRCxNQVBpQjtBQVE5QkUsRUFBQUEsV0FBVyxFQUFFRixNQVJpQjtBQVM5QkcsRUFBQUEsTUFBTSxFQUFFO0FBQ0pSLElBQUFBLElBQUksRUFBRUssTUFERjtBQUVKSSxJQUFBQSxJQUFJLEVBQUUsQ0FBQyxTQUFELEVBQVksWUFBWixFQUEwQixVQUExQixDQUZGO0FBR0pDLElBQUFBLE9BQU8sRUFBRTtBQUhMLEdBVHNCO0FBYzlCQyxFQUFBQSxTQUFTLEVBQUU7QUFDUFgsSUFBQUEsSUFBSSxFQUFFWSxPQURDO0FBRVBGLElBQUFBLE9BQU8sRUFBRTtBQUZGO0FBZG1CLENBQVgsRUFrQnBCO0FBQUNHLEVBQUFBLFVBQVUsRUFBRTtBQUFiLENBbEJvQixDQUF2QjtBQW9CQWhCLGNBQWMsQ0FBQ2lCLEdBQWYsQ0FBbUIsUUFBbkIsRUFBNkI7QUFDekJDLEVBQUFBLFNBQVMsRUFBRSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxLQUFtQjtBQUMxQixXQUFPRCxHQUFHLENBQUNFLEdBQVg7QUFDQSxXQUFPRixHQUFQO0FBQ0g7QUFKd0IsQ0FBN0I7QUFPQSxJQUFNRyxRQUFRLEdBQUcscUJBQU0sVUFBTixFQUFrQnZCLGNBQWxCLENBQWpCO2VBRWV1QixRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTY2hlbWEsIG1vZGVsfSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IGZlZWRiYWNrU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgcmVwb3J0ZWRieToge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1VzZXInLFxuICAgIH0sXG4gICAgdGl0bGU6IFN0cmluZyxcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgYWRtaW5SZW1hcms6IFN0cmluZyxcbiAgICBkZXNjcmlwdGlvbjogU3RyaW5nLFxuICAgIHN0YXR1czoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGVudW06IFsncGVuZGluZycsICdpblByb2dyZXNzJywgJ3Jlc29sdmVkJ10sXG4gICAgICAgIGRlZmF1bHQ6ICdwZW5kaW5nJ1xuICAgIH0sXG4gICAgaXNEZWxldGVkOiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbn0sIHt0aW1lc3RhbXBzOiB0cnVlfSk7XG5cbmZlZWRiYWNrU2NoZW1hLnNldCgndG9KU09OJywge1xuICAgIHRyYW5zZm9ybTogKGRvYywgcmV0LCBvcHQpID0+IHtcbiAgICAgICAgZGVsZXRlIHJldC5fX3Y7XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfSxcbn0pO1xuXG5jb25zdCBGZWVkYmFjayA9IG1vZGVsKCdGZWVkYmFjaycsIGZlZWRiYWNrU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgRmVlZGJhY2s7XG4iXX0=