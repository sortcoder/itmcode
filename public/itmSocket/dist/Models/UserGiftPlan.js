"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.userGiftPlanSchema = void 0;

var _mongoose = require("mongoose");

var userGiftPlanSchema = new _mongoose.Schema({
  userId: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  planId: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'Plan'
  },
  status: {
    type: String,
    enum: ['pending', 'used', 'active']
  },
  isDeleted: {
    type: Boolean,
    default: false
  }
}, {
  timestamps: true
});
exports.userGiftPlanSchema = userGiftPlanSchema;
userGiftPlanSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var UserGiftPlan = (0, _mongoose.model)('UserGiftPlan', userGiftPlanSchema);
var _default = UserGiftPlan;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvVXNlckdpZnRQbGFuLmpzIl0sIm5hbWVzIjpbInVzZXJHaWZ0UGxhblNjaGVtYSIsIlNjaGVtYSIsInVzZXJJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicGxhbklkIiwic3RhdHVzIiwiU3RyaW5nIiwiZW51bSIsImlzRGVsZXRlZCIsIkJvb2xlYW4iLCJkZWZhdWx0IiwidGltZXN0YW1wcyIsInNldCIsInRyYW5zZm9ybSIsImRvYyIsInJldCIsIm9wdCIsIl9fdiIsIlVzZXJHaWZ0UGxhbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVPLElBQU1BLGtCQUFrQixHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDekNDLEVBQUFBLE1BQU0sRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FEaUM7QUFLekNDLEVBQUFBLE1BQU0sRUFBRTtBQUNKSixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FMaUM7QUFVekNFLEVBQUFBLE1BQU0sRUFBRTtBQUNKTCxJQUFBQSxJQUFJLEVBQUVNLE1BREY7QUFFSkMsSUFBQUEsSUFBSSxFQUFFLENBQUMsU0FBRCxFQUFZLE1BQVosRUFBb0IsUUFBcEI7QUFGRixHQVZpQztBQWV6Q0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1BSLElBQUFBLElBQUksRUFBRVMsT0FEQztBQUVQQyxJQUFBQSxPQUFPLEVBQUU7QUFGRjtBQWY4QixDQUFYLEVBbUIvQjtBQUFDQyxFQUFBQSxVQUFVLEVBQUU7QUFBYixDQW5CK0IsQ0FBM0I7O0FBcUJQZCxrQkFBa0IsQ0FBQ2UsR0FBbkIsQ0FBdUIsUUFBdkIsRUFBaUM7QUFDN0JDLEVBQUFBLFNBQVMsRUFBRSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxLQUFtQjtBQUMxQixXQUFPRCxHQUFHLENBQUNFLEdBQVg7QUFDQSxXQUFPRixHQUFQO0FBQ0g7QUFKNEIsQ0FBakM7QUFPQSxJQUFNRyxZQUFZLEdBQUcscUJBQU0sY0FBTixFQUFzQnJCLGtCQUF0QixDQUFyQjtlQUVlcUIsWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U2NoZW1hLCBtb2RlbH0gZnJvbSAnbW9uZ29vc2UnO1xuXG5leHBvcnQgY29uc3QgdXNlckdpZnRQbGFuU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgdXNlcklkOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIHBsYW5JZDoge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1BsYW4nXG4gICAgfSxcbiAgIFxuICAgIHN0YXR1czoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGVudW06IFsncGVuZGluZycsICd1c2VkJywgJ2FjdGl2ZSddXG4gICAgfSxcbiAgIFxuICAgIGlzRGVsZXRlZDoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH1cbn0sIHt0aW1lc3RhbXBzOiB0cnVlfSk7XG5cbnVzZXJHaWZ0UGxhblNjaGVtYS5zZXQoJ3RvSlNPTicsIHtcbiAgICB0cmFuc2Zvcm06IChkb2MsIHJldCwgb3B0KSA9PiB7XG4gICAgICAgIGRlbGV0ZSByZXQuX192O1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH1cbn0pO1xuXG5jb25zdCBVc2VyR2lmdFBsYW4gPSBtb2RlbCgnVXNlckdpZnRQbGFuJywgdXNlckdpZnRQbGFuU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlckdpZnRQbGFuO1xuIl19