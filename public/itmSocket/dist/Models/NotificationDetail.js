"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var notificationDetailSchema = new _mongoose.Schema({
  toUser: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  fromUser: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  notification: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'Notification'
  },
  deviceToken: String,
  deviceTokens: [],
  title: String,
  message: String,
  isRead: {
    type: Boolean,
    default: false
  },
  isUnsubscribe: {
    type: Boolean,
    default: false
  },
  isDeleted: {
    type: Boolean,
    default: false
  },
  isDeletedAdmin: {
    type: Boolean,
    default: false
  },
  isDeletedUser: {
    type: Boolean,
    default: false
  },
  createdBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  updatedBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }
}, {
  timestamps: true
});
notificationDetailSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var NotificationDetail = (0, _mongoose.model)('NotificationDetail', notificationDetailSchema);
var _default = NotificationDetail;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvTm90aWZpY2F0aW9uRGV0YWlsLmpzIl0sIm5hbWVzIjpbIm5vdGlmaWNhdGlvbkRldGFpbFNjaGVtYSIsIlNjaGVtYSIsInRvVXNlciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiZnJvbVVzZXIiLCJub3RpZmljYXRpb24iLCJkZXZpY2VUb2tlbiIsIlN0cmluZyIsImRldmljZVRva2VucyIsInRpdGxlIiwibWVzc2FnZSIsImlzUmVhZCIsIkJvb2xlYW4iLCJkZWZhdWx0IiwiaXNVbnN1YnNjcmliZSIsImlzRGVsZXRlZCIsImlzRGVsZXRlZEFkbWluIiwiaXNEZWxldGVkVXNlciIsImNyZWF0ZWRCeSIsInJlcXVpcmVkIiwidXBkYXRlZEJ5IiwidGltZXN0YW1wcyIsInNldCIsInRyYW5zZm9ybSIsImRvYyIsInJldCIsIm9wdCIsIl9fdiIsIk5vdGlmaWNhdGlvbkRldGFpbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLHdCQUF3QixHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDeENDLEVBQUFBLE1BQU0sRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FEZ0M7QUFNeENDLEVBQUFBLFFBQVEsRUFBRTtBQUNOSixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGI7QUFFTkMsSUFBQUEsR0FBRyxFQUFFO0FBRkMsR0FOOEI7QUFVeENFLEVBQUFBLFlBQVksRUFBRTtBQUNWTCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRFQ7QUFFVkMsSUFBQUEsR0FBRyxFQUFFO0FBRkssR0FWMEI7QUFjeENHLEVBQUFBLFdBQVcsRUFBRUMsTUFkMkI7QUFleENDLEVBQUFBLFlBQVksRUFBRSxFQWYwQjtBQWdCeENDLEVBQUFBLEtBQUssRUFBRUYsTUFoQmlDO0FBaUJ4Q0csRUFBQUEsT0FBTyxFQUFFSCxNQWpCK0I7QUFrQnhDSSxFQUFBQSxNQUFNLEVBQUU7QUFDSlgsSUFBQUEsSUFBSSxFQUFFWSxPQURGO0FBRUpDLElBQUFBLE9BQU8sRUFBRTtBQUZMLEdBbEJnQztBQXNCeENDLEVBQUFBLGFBQWEsRUFBRTtBQUNYZCxJQUFBQSxJQUFJLEVBQUVZLE9BREs7QUFFWEMsSUFBQUEsT0FBTyxFQUFFO0FBRkUsR0F0QnlCO0FBMEJ4Q0UsRUFBQUEsU0FBUyxFQUFFO0FBQ1BmLElBQUFBLElBQUksRUFBRVksT0FEQztBQUVQQyxJQUFBQSxPQUFPLEVBQUU7QUFGRixHQTFCNkI7QUE4QnhDRyxFQUFBQSxjQUFjLEVBQUU7QUFDWmhCLElBQUFBLElBQUksRUFBRVksT0FETTtBQUVaQyxJQUFBQSxPQUFPLEVBQUU7QUFGRyxHQTlCd0I7QUFrQ3hDSSxFQUFBQSxhQUFhLEVBQUU7QUFDWGpCLElBQUFBLElBQUksRUFBRVksT0FESztBQUVYQyxJQUFBQSxPQUFPLEVBQUU7QUFGRSxHQWxDeUI7QUFzQ3hDSyxFQUFBQSxTQUFTLEVBQUU7QUFDUGxCLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEWjtBQUVQQyxJQUFBQSxHQUFHLEVBQUUsTUFGRTtBQUdQZ0IsSUFBQUEsUUFBUSxFQUFFO0FBSEgsR0F0QzZCO0FBMkN4Q0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1BwQixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFLE1BRkU7QUFHUGdCLElBQUFBLFFBQVEsRUFBRTtBQUhIO0FBM0M2QixDQUFYLEVBZ0Q5QjtBQUFFRSxFQUFBQSxVQUFVLEVBQUU7QUFBZCxDQWhEOEIsQ0FBakM7QUFrREF4Qix3QkFBd0IsQ0FBQ3lCLEdBQXpCLENBQTZCLFFBQTdCLEVBQXVDO0FBQ25DQyxFQUFBQSxTQUFTLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLEdBQVgsS0FBbUI7QUFDMUIsV0FBT0QsR0FBRyxDQUFDRSxHQUFYO0FBQ0EsV0FBT0YsR0FBUDtBQUNIO0FBSmtDLENBQXZDO0FBT0EsSUFBTUcsa0JBQWtCLEdBQUcscUJBQU0sb0JBQU4sRUFBNEIvQix3QkFBNUIsQ0FBM0I7ZUFFZStCLGtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBtb2RlbCB9IGZyb20gJ21vbmdvb3NlJztcblxuY29uc3Qgbm90aWZpY2F0aW9uRGV0YWlsU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgdG9Vc2VyOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICBcbiAgICBmcm9tVXNlcjoge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1VzZXInXG4gICAgfSxcbiAgICBub3RpZmljYXRpb246IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdOb3RpZmljYXRpb24nXG4gICAgfSxcbiAgICBkZXZpY2VUb2tlbjogU3RyaW5nLFxuICAgIGRldmljZVRva2VuczogW10sXG4gICAgdGl0bGU6IFN0cmluZyxcbiAgICBtZXNzYWdlOiBTdHJpbmcsXG4gICAgaXNSZWFkOiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICBpc1Vuc3Vic2NyaWJlOiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICBpc0RlbGV0ZWQ6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGlzRGVsZXRlZEFkbWluOiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICBpc0RlbGV0ZWRVc2VyOiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICBjcmVhdGVkQnk6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHVwZGF0ZWRCeToge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1VzZXInLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG59LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XG5cbm5vdGlmaWNhdGlvbkRldGFpbFNjaGVtYS5zZXQoJ3RvSlNPTicsIHtcbiAgICB0cmFuc2Zvcm06IChkb2MsIHJldCwgb3B0KSA9PiB7XG4gICAgICAgIGRlbGV0ZSByZXQuX192O1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH0sXG59KTtcblxuY29uc3QgTm90aWZpY2F0aW9uRGV0YWlsID0gbW9kZWwoJ05vdGlmaWNhdGlvbkRldGFpbCcsIG5vdGlmaWNhdGlvbkRldGFpbFNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkRldGFpbDtcbiJdfQ==