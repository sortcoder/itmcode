"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var giftsSchema = new _mongoose.Schema({
  zole: {
    type: Number,
    required: true,
    index: true
  },
  popularity: Number,
  giftImg: String,
  isDeleted: {
    type: Boolean,
    default: false
  },
  createdBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  updatedBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }
}, {
  timestamps: true
});
giftsSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var Gift = (0, _mongoose.model)('Gift', giftsSchema);
var _default = Gift;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvR2lmdHMuanMiXSwibmFtZXMiOlsiZ2lmdHNTY2hlbWEiLCJTY2hlbWEiLCJ6b2xlIiwidHlwZSIsIk51bWJlciIsInJlcXVpcmVkIiwiaW5kZXgiLCJwb3B1bGFyaXR5IiwiZ2lmdEltZyIsIlN0cmluZyIsImlzRGVsZXRlZCIsIkJvb2xlYW4iLCJkZWZhdWx0IiwiY3JlYXRlZEJ5IiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInVwZGF0ZWRCeSIsInRpbWVzdGFtcHMiLCJzZXQiLCJ0cmFuc2Zvcm0iLCJkb2MiLCJyZXQiLCJvcHQiLCJfX3YiLCJHaWZ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDM0JDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVDLE1BREo7QUFFRkMsSUFBQUEsUUFBUSxFQUFFLElBRlI7QUFHRkMsSUFBQUEsS0FBSyxFQUFFO0FBSEwsR0FEcUI7QUFNM0JDLEVBQUFBLFVBQVUsRUFBRUgsTUFOZTtBQU8zQkksRUFBQUEsT0FBTyxFQUFFQyxNQVBrQjtBQVEzQkMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BQLElBQUFBLElBQUksRUFBRVEsT0FEQztBQUVQQyxJQUFBQSxPQUFPLEVBQUU7QUFGRixHQVJnQjtBQVkzQkMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BWLElBQUFBLElBQUksRUFBRUYsaUJBQU9hLEtBQVAsQ0FBYUMsUUFEWjtBQUVQQyxJQUFBQSxHQUFHLEVBQUUsTUFGRTtBQUdQWCxJQUFBQSxRQUFRLEVBQUU7QUFISCxHQVpnQjtBQWlCM0JZLEVBQUFBLFNBQVMsRUFBRTtBQUNQZCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPYSxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFLE1BRkU7QUFHUFgsSUFBQUEsUUFBUSxFQUFFO0FBSEg7QUFqQmdCLENBQVgsRUFzQmpCO0FBQUVhLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBdEJpQixDQUFwQjtBQXdCQWxCLFdBQVcsQ0FBQ21CLEdBQVosQ0FBZ0IsUUFBaEIsRUFBMEI7QUFDdEJDLEVBQUFBLFNBQVMsRUFBRSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxLQUFtQjtBQUMxQixXQUFPRCxHQUFHLENBQUNFLEdBQVg7QUFDQSxXQUFPRixHQUFQO0FBQ0g7QUFKcUIsQ0FBMUI7QUFPQSxJQUFNRyxJQUFJLEdBQUcscUJBQU0sTUFBTixFQUFjekIsV0FBZCxDQUFiO2VBRWV5QixJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBtb2RlbCB9IGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgZ2lmdHNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICB6b2xlOiB7XG4gICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIGluZGV4OiB0cnVlXG4gICAgfSxcbiAgICBwb3B1bGFyaXR5OiBOdW1iZXIsXG4gICAgZ2lmdEltZzogU3RyaW5nLFxuICAgIGlzRGVsZXRlZDoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgY3JlYXRlZEJ5OiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcicsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB1cGRhdGVkQnk6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0pO1xuXG5naWZ0c1NjaGVtYS5zZXQoJ3RvSlNPTicsIHtcbiAgICB0cmFuc2Zvcm06IChkb2MsIHJldCwgb3B0KSA9PiB7XG4gICAgICAgIGRlbGV0ZSByZXQuX192O1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH0sXG59KTtcblxuY29uc3QgR2lmdCA9IG1vZGVsKCdHaWZ0JywgZ2lmdHNTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBHaWZ0O1xuIl19