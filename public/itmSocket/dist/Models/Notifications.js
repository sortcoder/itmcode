"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var notificationsSchema = new _mongoose.Schema({
  toUser: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  toUsers: [{
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  }],
  fromUser: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  deviceToken: String,
  deviceTokens: [],
  title: String,
  message: String,
  isRead: {
    type: Boolean,
    default: false
  },
  isUnsubscribe: {
    type: Boolean,
    default: false
  },
  isDeleted: {
    type: Boolean,
    default: false
  },
  isDeletedAdmin: {
    type: Boolean,
    default: false
  },
  createdBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  updatedBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }
}, {
  timestamps: true
});
notificationsSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var Notification = (0, _mongoose.model)('Notification', notificationsSchema);
var _default = Notification;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvTm90aWZpY2F0aW9ucy5qcyJdLCJuYW1lcyI6WyJub3RpZmljYXRpb25zU2NoZW1hIiwiU2NoZW1hIiwidG9Vc2VyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJ0b1VzZXJzIiwiZnJvbVVzZXIiLCJkZXZpY2VUb2tlbiIsIlN0cmluZyIsImRldmljZVRva2VucyIsInRpdGxlIiwibWVzc2FnZSIsImlzUmVhZCIsIkJvb2xlYW4iLCJkZWZhdWx0IiwiaXNVbnN1YnNjcmliZSIsImlzRGVsZXRlZCIsImlzRGVsZXRlZEFkbWluIiwiY3JlYXRlZEJ5IiwicmVxdWlyZWQiLCJ1cGRhdGVkQnkiLCJ0aW1lc3RhbXBzIiwic2V0IiwidHJhbnNmb3JtIiwiZG9jIiwicmV0Iiwib3B0IiwiX192IiwiTm90aWZpY2F0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsbUJBQW1CLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUNuQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxJQUFBQSxHQUFHLEVBQUU7QUFGRCxHQUQyQjtBQUtuQ0MsRUFBQUEsT0FBTyxFQUFFLENBQUM7QUFDTkosSUFBQUEsSUFBSSxFQUFFRixpQkFBT0csS0FBUCxDQUFhQyxRQURiO0FBRU5DLElBQUFBLEdBQUcsRUFBRTtBQUZDLEdBQUQsQ0FMMEI7QUFTbkNFLEVBQUFBLFFBQVEsRUFBRTtBQUNOTCxJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRGI7QUFFTkMsSUFBQUEsR0FBRyxFQUFFO0FBRkMsR0FUeUI7QUFhbkNHLEVBQUFBLFdBQVcsRUFBRUMsTUFic0I7QUFjbkNDLEVBQUFBLFlBQVksRUFBRSxFQWRxQjtBQWVuQ0MsRUFBQUEsS0FBSyxFQUFFRixNQWY0QjtBQWdCbkNHLEVBQUFBLE9BQU8sRUFBRUgsTUFoQjBCO0FBaUJuQ0ksRUFBQUEsTUFBTSxFQUFFO0FBQ0pYLElBQUFBLElBQUksRUFBRVksT0FERjtBQUVKQyxJQUFBQSxPQUFPLEVBQUU7QUFGTCxHQWpCMkI7QUFxQm5DQyxFQUFBQSxhQUFhLEVBQUU7QUFDWGQsSUFBQUEsSUFBSSxFQUFFWSxPQURLO0FBRVhDLElBQUFBLE9BQU8sRUFBRTtBQUZFLEdBckJvQjtBQXlCbkNFLEVBQUFBLFNBQVMsRUFBRTtBQUNQZixJQUFBQSxJQUFJLEVBQUVZLE9BREM7QUFFUEMsSUFBQUEsT0FBTyxFQUFFO0FBRkYsR0F6QndCO0FBNkJuQ0csRUFBQUEsY0FBYyxFQUFFO0FBQ1poQixJQUFBQSxJQUFJLEVBQUVZLE9BRE07QUFFWkMsSUFBQUEsT0FBTyxFQUFFO0FBRkcsR0E3Qm1CO0FBaUNuQ0ksRUFBQUEsU0FBUyxFQUFFO0FBQ1BqQixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFLE1BRkU7QUFHUGUsSUFBQUEsUUFBUSxFQUFFO0FBSEgsR0FqQ3dCO0FBc0NuQ0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1BuQixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFLE1BRkU7QUFHUGUsSUFBQUEsUUFBUSxFQUFFO0FBSEg7QUF0Q3dCLENBQVgsRUEyQ3pCO0FBQUVFLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBM0N5QixDQUE1QjtBQTZDQXZCLG1CQUFtQixDQUFDd0IsR0FBcEIsQ0FBd0IsUUFBeEIsRUFBa0M7QUFDOUJDLEVBQUFBLFNBQVMsRUFBRSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxLQUFtQjtBQUMxQixXQUFPRCxHQUFHLENBQUNFLEdBQVg7QUFDQSxXQUFPRixHQUFQO0FBQ0g7QUFKNkIsQ0FBbEM7QUFPQSxJQUFNRyxZQUFZLEdBQUcscUJBQU0sY0FBTixFQUFzQjlCLG1CQUF0QixDQUFyQjtlQUVlOEIsWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSwgbW9kZWwgfSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IG5vdGlmaWNhdGlvbnNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICB0b1VzZXI6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJ1xuICAgIH0sXG4gICAgdG9Vc2VyczogW3tcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJ1xuICAgIH1dLFxuICAgIGZyb21Vc2VyOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIGRldmljZVRva2VuOiBTdHJpbmcsXG4gICAgZGV2aWNlVG9rZW5zOiBbXSxcbiAgICB0aXRsZTogU3RyaW5nLFxuICAgIG1lc3NhZ2U6IFN0cmluZyxcbiAgICBpc1JlYWQ6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGlzVW5zdWJzY3JpYmU6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGlzRGVsZXRlZDoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgaXNEZWxldGVkQWRtaW46IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGNyZWF0ZWRCeToge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1VzZXInLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgdXBkYXRlZEJ5OiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcicsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbn0sIHsgdGltZXN0YW1wczogdHJ1ZSB9KTtcblxubm90aWZpY2F0aW9uc1NjaGVtYS5zZXQoJ3RvSlNPTicsIHtcbiAgICB0cmFuc2Zvcm06IChkb2MsIHJldCwgb3B0KSA9PiB7XG4gICAgICAgIGRlbGV0ZSByZXQuX192O1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH0sXG59KTtcblxuY29uc3QgTm90aWZpY2F0aW9uID0gbW9kZWwoJ05vdGlmaWNhdGlvbicsIG5vdGlmaWNhdGlvbnNTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb247XG4iXX0=