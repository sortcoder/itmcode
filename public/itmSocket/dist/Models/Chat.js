"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var ChatSchema = new _mongoose.Schema({
  sender: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  receiver: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  message: {
    type: String,
    required: true
  },
  isRead: {
    type: Number,
    default: 0
  },
  type: {
    type: String,
    required: true
  },
  isDeleted: {
    type: Boolean,
    default: false
  }
}, {
  timestamps: true
});
ChatSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var Chat = (0, _mongoose.model)('Chat', ChatSchema);
var _default = Chat;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvQ2hhdC5qcyJdLCJuYW1lcyI6WyJDaGF0U2NoZW1hIiwiU2NoZW1hIiwic2VuZGVyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJyZWNlaXZlciIsIm1lc3NhZ2UiLCJTdHJpbmciLCJyZXF1aXJlZCIsImlzUmVhZCIsIk51bWJlciIsImRlZmF1bHQiLCJpc0RlbGV0ZWQiLCJCb29sZWFuIiwidGltZXN0YW1wcyIsInNldCIsInRyYW5zZm9ybSIsImRvYyIsInJldCIsIm9wdCIsIl9fdiIsIkNoYXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUMxQkMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxJQUFBQSxHQUFHLEVBQUU7QUFGRCxHQURrQjtBQUsxQkMsRUFBQUEsUUFBUSxFQUFFO0FBQ05KLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxJQUFBQSxHQUFHLEVBQUU7QUFGQyxHQUxnQjtBQVMxQkUsRUFBQUEsT0FBTyxFQUFFO0FBQ0xMLElBQUFBLElBQUksRUFBRU0sTUFERDtBQUVMQyxJQUFBQSxRQUFRLEVBQUU7QUFGTCxHQVRpQjtBQWMxQkMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pSLElBQUFBLElBQUksRUFBRVMsTUFERjtBQUVKQyxJQUFBQSxPQUFPLEVBQUU7QUFGTCxHQWRrQjtBQWtCMUJWLEVBQUFBLElBQUksRUFBRTtBQUNGQSxJQUFBQSxJQUFJLEVBQUVNLE1BREo7QUFFRkMsSUFBQUEsUUFBUSxFQUFFO0FBRlIsR0FsQm9CO0FBc0IxQkksRUFBQUEsU0FBUyxFQUFFO0FBQ1BYLElBQUFBLElBQUksRUFBRVksT0FEQztBQUVQRixJQUFBQSxPQUFPLEVBQUU7QUFGRjtBQXRCZSxDQUFYLEVBMkJoQjtBQUFFRyxFQUFBQSxVQUFVLEVBQUU7QUFBZCxDQTNCZ0IsQ0FBbkI7QUE2QkFoQixVQUFVLENBQUNpQixHQUFYLENBQWUsUUFBZixFQUF5QjtBQUNyQkMsRUFBQUEsU0FBUyxFQUFFLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEtBQW1CO0FBQzFCLFdBQU9ELEdBQUcsQ0FBQ0UsR0FBWDtBQUNBLFdBQU9GLEdBQVA7QUFDSDtBQUpvQixDQUF6QjtBQU9BLElBQU1HLElBQUksR0FBRyxxQkFBTSxNQUFOLEVBQWN2QixVQUFkLENBQWI7ZUFFZXVCLEkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSAnbW9uZ29vc2UnO1xuXG5jb25zdCBDaGF0U2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgc2VuZGVyOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIHJlY2VpdmVyOiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIG1lc3NhZ2U6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICBcbiAgICB9LFxuICAgIGlzUmVhZDoge1xuICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgIGRlZmF1bHQ6IDBcbiAgICB9LFxuICAgIHR5cGU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB9LFxuICAgIGlzRGVsZXRlZDoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH1cbiAgXG59LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XG5cbkNoYXRTY2hlbWEuc2V0KCd0b0pTT04nLCB7XG4gICAgdHJhbnNmb3JtOiAoZG9jLCByZXQsIG9wdCkgPT4ge1xuICAgICAgICBkZWxldGUgcmV0Ll9fdjtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICB9LFxufSk7XG5cbmNvbnN0IENoYXQgPSBtb2RlbCgnQ2hhdCcsIENoYXRTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBDaGF0O1xuIl19