"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var giftsSchema = new _mongoose.Schema({
  searchedBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },
  searchedIds: [{
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User'
  }],
  isDeleted: {
    type: Boolean,
    default: false
  },
  createdBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  updatedBy: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }
}, {
  timestamps: true
});
giftsSchema.set('toJSON', {
  transform: (doc, ret, opt) => {
    delete ret.__v;
    return ret;
  }
});
var Gift = (0, _mongoose.model)('Gift', giftsSchema);
var _default = Gift;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Nb2RlbHMvUmVjZW50U2VhcmNoZXMuanMiXSwibmFtZXMiOlsiZ2lmdHNTY2hlbWEiLCJTY2hlbWEiLCJzZWFyY2hlZEJ5IiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJzZWFyY2hlZElkcyIsImlzRGVsZXRlZCIsIkJvb2xlYW4iLCJkZWZhdWx0IiwiY3JlYXRlZEJ5IiwicmVxdWlyZWQiLCJ1cGRhdGVkQnkiLCJ0aW1lc3RhbXBzIiwic2V0IiwidHJhbnNmb3JtIiwiZG9jIiwicmV0Iiwib3B0IiwiX192IiwiR2lmdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLFdBQVcsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzNCQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFRixpQkFBT0csS0FBUCxDQUFhQyxRQURYO0FBRVJDLElBQUFBLEdBQUcsRUFBRTtBQUZHLEdBRGU7QUFLM0JDLEVBQUFBLFdBQVcsRUFBRSxDQUFDO0FBQ1ZKLElBQUFBLElBQUksRUFBRUYsaUJBQU9HLEtBQVAsQ0FBYUMsUUFEVDtBQUVWQyxJQUFBQSxHQUFHLEVBQUU7QUFGSyxHQUFELENBTGM7QUFTM0JFLEVBQUFBLFNBQVMsRUFBRTtBQUNQTCxJQUFBQSxJQUFJLEVBQUVNLE9BREM7QUFFUEMsSUFBQUEsT0FBTyxFQUFFO0FBRkYsR0FUZ0I7QUFhM0JDLEVBQUFBLFNBQVMsRUFBRTtBQUNQUixJQUFBQSxJQUFJLEVBQUVGLGlCQUFPRyxLQUFQLENBQWFDLFFBRFo7QUFFUEMsSUFBQUEsR0FBRyxFQUFFLE1BRkU7QUFHUE0sSUFBQUEsUUFBUSxFQUFFO0FBSEgsR0FiZ0I7QUFrQjNCQyxFQUFBQSxTQUFTLEVBQUU7QUFDUFYsSUFBQUEsSUFBSSxFQUFFRixpQkFBT0csS0FBUCxDQUFhQyxRQURaO0FBRVBDLElBQUFBLEdBQUcsRUFBRSxNQUZFO0FBR1BNLElBQUFBLFFBQVEsRUFBRTtBQUhIO0FBbEJnQixDQUFYLEVBdUJqQjtBQUFFRSxFQUFBQSxVQUFVLEVBQUU7QUFBZCxDQXZCaUIsQ0FBcEI7QUF5QkFkLFdBQVcsQ0FBQ2UsR0FBWixDQUFnQixRQUFoQixFQUEwQjtBQUN0QkMsRUFBQUEsU0FBUyxFQUFFLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEtBQW1CO0FBQzFCLFdBQU9ELEdBQUcsQ0FBQ0UsR0FBWDtBQUNBLFdBQU9GLEdBQVA7QUFDSDtBQUpxQixDQUExQjtBQU9BLElBQU1HLElBQUksR0FBRyxxQkFBTSxNQUFOLEVBQWNyQixXQUFkLENBQWI7ZUFFZXFCLEkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSAnbW9uZ29vc2UnO1xuXG5jb25zdCBnaWZ0c1NjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICAgIHNlYXJjaGVkQnk6IHtcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJ1xuICAgIH0sXG4gICAgc2VhcmNoZWRJZHM6IFt7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcidcbiAgICB9XSxcbiAgICBpc0RlbGV0ZWQ6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGNyZWF0ZWRCeToge1xuICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlZjogJ1VzZXInLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgdXBkYXRlZEJ5OiB7XG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnVXNlcicsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbn0sIHsgdGltZXN0YW1wczogdHJ1ZSB9KTtcblxuZ2lmdHNTY2hlbWEuc2V0KCd0b0pTT04nLCB7XG4gICAgdHJhbnNmb3JtOiAoZG9jLCByZXQsIG9wdCkgPT4ge1xuICAgICAgICBkZWxldGUgcmV0Ll9fdjtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICB9LFxufSk7XG5cbmNvbnN0IEdpZnQgPSBtb2RlbCgnR2lmdCcsIGdpZnRzU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgR2lmdDtcbiJdfQ==